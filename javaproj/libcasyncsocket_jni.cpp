/* DO NOT EDIT THIS FILE - it is machine generated */
#include "JNICAsyncSocket.h"

#include <string>
#include <iostream>
#include <stdint.h>

#include "CAsyncSocket.h"

static CAsyncSocket *getObject(JNIEnv *env, jobject self)
{
	jclass cls = env->GetObjectClass(self);
	if (!cls)
		env->FatalError("GetObjectClass failed");

	jfieldID nativeObjectPointerID = env->GetFieldID(cls, "nativeObjectPointer", "J");
	if (!nativeObjectPointerID)
		env->FatalError("GetFieldID failed");

	jlong nativeObjectPointer = env->GetLongField(self, nativeObjectPointerID);
	return reinterpret_cast<CAsyncSocket *>(nativeObjectPointer);
}



/*
 * Class:     JNICAsyncSocket
 * Method:    nativeNew
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_JNICAsyncSocket_nativeNew
  (JNIEnv *env, jobject self)
{
	CAsyncSocket *socket = new CAsyncSocket();
	return reinterpret_cast<jlong>(socket);
}


/*
 * Class:     JNICAsyncSocket
 * Method:    getSocket
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNICAsyncSocket_getSocket
  (JNIEnv *env, jobject self)
{
	CAsyncSocket *_self = getObject(env, self);
	return static_cast<jint>(_self->getSocket());
}

